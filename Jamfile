
#---- setup ----
#This portion of the Jamfile sets up compiler and linker flags per-OS.
#You shouldn't need to change it.

if $(OS) = NT { #Windows
	NEST_LIBS = ..\\nest-libs\\windows ;
	C++FLAGS = /nologo /Z7 /c /EHsc /W3 /WX /MD /std:c++17
		/I"$(NEST_LIBS)/SDL2/include"
		/I"$(NEST_LIBS)/glm/include"
		/I"$(NEST_LIBS)/libpng/include"
		/I"$(NEST_LIBS)/opusfile/include"
		/I"$(NEST_LIBS)/libopus/include"
		/I"$(NEST_LIBS)/libogg/include"
		/I"$(NEST_LIBS)/harfbuzz/include"
		/I"$(NEST_LIBS)/freetype/include"
		/I"lib"
		/I"."
		#disable a few warnings:
		/wd4146 #-1U is still unsigned
		/wd4297 #unforunately SDLmain is nothrow
	;
	LINKFLAGS = /nologo /SUBSYSTEM:CONSOLE /DEBUG:FASTLINK
		/LIBPATH:"$(NEST_LIBS)/SDL2/lib"
		/LIBPATH:"$(NEST_LIBS)/libpng/lib"
		/LIBPATH:"$(NEST_LIBS)/zlib/lib"
		/LIBPATH:"$(NEST_LIBS)/opusfile/lib"
		/LIBPATH:"$(NEST_LIBS)/libopus/lib"
		/LIBPATH:"$(NEST_LIBS)/libogg/lib"
		/LIBPATH:"$(NEST_LIBS)/harfbuzz/lib"
		/LIBPATH:"$(NEST_LIBS)/freetype/lib"
	;
	LINKLIBS =
		SDL2main.lib SDL2.lib OpenGL32.lib Shell32.lib
		libpng.lib zlib.lib opusfile.lib opus.lib libogg.lib harfbuzz.lib freetype.lib
	;

	File SDL2.dll : $(NEST_LIBS)\\SDL2\\dist\\SDL2.dll ;
	File README-SDL.txt : $(NEST_LIBS)\\SDL2\\dist\\README-SDL.txt ;
	MakeLocate SDL2.dll : dist ;
	MakeLocate README-SDL.txt : dist ;
} else if $(OS) = MACOSX { #MacOS
	NEST_LIBS = ../nest-libs/macos ;
	C++ = clang++ ;
	C++FLAGS =
		-std=c++17 -g -Wall -Werror
		`'$(NEST_LIBS)/SDL2/bin/sdl2-config' --prefix='$(NEST_LIBS)/SDL2' --cflags` #SDL2
		-I$(NEST_LIBS)/glm/include                                                  #glm
		-I$(NEST_LIBS)/libpng/include                                               #libpng
		-I$(NEST_LIBS)/opusfile/include                                             #opusfile
		-I$(NEST_LIBS)/libopus/include                                              #libopus
		-I$(NEST_LIBS)/libogg/include                                               #libogg
		-I$(NEST_LIBS)/freetype/include                                             #freetype
		-I$(NEST_LIBS)/harfbuzz/include                                             #harfbuzz
		-Ilib
		-I.
		;
	LINK = clang++ ;
	LINKFLAGS = -std=c++17 -g -Wall -Werror ;
	LINKLIBS =
		`'$(NEST_LIBS)/SDL2/bin/sdl2-config' --prefix='$(NEST_LIBS)/SDL2' --static-libs` -framework OpenGL #SDL2
		-L$(NEST_LIBS)/libpng/lib -lpng                                             #libpng
		-L$(NEST_LIBS)/zlib/lib -lz                                                 #zlib (for libpng)
		-L$(NEST_LIBS)/opusfile/lib -lopusfile                                      #opusfile
		-L$(NEST_LIBS)/libopus/lib -lopus                                           #libopus (for opusfile)
		-L$(NEST_LIBS)/libogg/lib -logg                                             #libogg (for opusfile)
		-L$(NEST_LIBS)/harfbuzz/lib -lharfbuzz                                      #harfbuzz
		-L$(NEST_LIBS)/freetype/lib -lfreetype                                      #freetype
		;
	File README-SDL.txt : $(NEST_LIBS)/SDL2/dist/README-SDL.txt ;
	MakeLocate README-SDL.txt : dist ;
} else if $(OS) = LINUX { #Linux
	NEST_LIBS = ../nest-libs/linux ;
	C++ = g++ -no-pie ;
	C++FLAGS =
		-std=c++17 -g -Wall -Werror
		`'$(NEST_LIBS)/SDL2/bin/sdl2-config' --prefix='$(NEST_LIBS)/SDL2' --cflags` #SDL2
		-I$(NEST_LIBS)/glm/include                                                  #glm
		-I$(NEST_LIBS)/libpng/include                                               #libpng
		-I$(NEST_LIBS)/opusfile/include                                             #opusfile
		-I$(NEST_LIBS)/libopus/include                                              #libopus
		-I$(NEST_LIBS)/libogg/include                                               #libogg
		-I$(NEST_LIBS)/freetype/include                                             #freetype
		-I$(NEST_LIBS)/harfbuzz/include                                             #harfbuzz
		-Ilib
		-I.
		;
	LINK = g++ -no-pie ;
	LINKFLAGS = -std=c++17 -g -Wall -Werror ;
	LINKLIBS =
		`'$(NEST_LIBS)/SDL2/bin/sdl2-config' --prefix='$(NEST_LIBS)/SDL2' --static-libs` -lGL #SDL2
		-L$(NEST_LIBS)/libpng/lib -lpng                                                       #libpng
		-L$(NEST_LIBS)/zlib/lib -lz                                                           #zlib (for libpng)
		-L$(NEST_LIBS)/opusfile/lib -lopusfile                                                #opusfile
		-L$(NEST_LIBS)/libopus/lib -lopus                                                     #libopus (for opusfile)
		-L$(NEST_LIBS)/libogg/lib -logg                                                       #libogg (for opusfile)
		-L$(NEST_LIBS)/harfbuzz/lib -lharfbuzz                                                #harfbuzz
		-L$(NEST_LIBS)/freetype/lib -lfreetype                                                #freetype
		;
	#`PATH=$(KIT_LIBS)/SDL2/bin:$PATH sdl2-config --static-libs` -lGL #SDL2 (old way that allows system libs to also work)
	File README-SDL.txt : $(NEST_LIBS)/SDL2/dist/README-SDL.txt ;
	MakeLocate README-SDL.txt : dist ;
}

#---- build ----
#This is the part of the file that tells Jam how to build your project.

#Store the names of various .cpp files to build into variables:
CLIENT_NAMES =
	client
	PlayMode
	MenuMode
	LitColorTextureProgram
	Sound
	load_wav
	load_opus
	main_menu
	main_play
	;

COMMON_NAMES =
	ColorTextureProgram
	data_path
	PathFont
	PathFont-font
	DrawLines
	ColorProgram
	Scene
	Mesh
	load_save_png
	gl_compile_program
	Mode
	GL
	Load
	Sprite
	DrawSprites
	Util
	Texture2DProgram
	FontProgram
	;
	
GAMEBASE_NAME =
	Player
    Room
	RoomPrototype
    Monster
	MonsterPrototype
	HeadsUpDisplay
    Dialog
	Door
	Buff
	ItemPrototype
	PotionPrototype
	EquipmentPrototype
	Inventory
	MonsterAI
	ItemPickup
	DoorKey
	;

ENGINE_NAMES =
	Animation
	MovementComponent
	InputSystem
	Transform2D
	Collider
	AOE
	AOEPrototype
	Timer
	TimerGuard
	Text
	Trigger
	Entity
	Mob
	Attack
	;

PACK_SPRITES_NAMES =
	pack-sprites
	;

LOCATE_TARGET = objs ; #put objects in 'objs' directory
Objects 
	$(CLIENT_NAMES:S=.cpp)
	$(COMMON_NAMES:S=.cpp)
	gamebase/$(GAMEBASE_NAME:S=.cpp)
	engine/$(ENGINE_NAMES:S=.cpp)
	test/jsontest.cpp
	;

#------------------------
##check that a program that uses harfbuzz + freetype functions links properly:
#LOCATE_TARGET = objs ;
#Objects freetype-test.cpp ;
#LOCATE_TARGET = dist ;
#MainFromObjects freetype-test : freetype-test$(SUFOBJ) ;
#------------------------

LOCATE_TARGET = dist ; #put main in 'dist' directory
MainFromObjects client : $(CLIENT_NAMES:S=$(SUFOBJ)) $(COMMON_NAMES:S=$(SUFOBJ)) gamebase/$(GAMEBASE_NAME:S=$(SUFOBJ)) engine/$(ENGINE_NAMES:S=$(SUFOBJ)) ;
#LOCATE_TARGET = test ;
#MainFromObjects jsontest : test/jsontest$(SUFOBJ) $(COMMON_NAMES:S=$(SUFOBJ)) gamebase/$(GAMEBASE_NAME:S=$(SUFOBJ)) engine/$(ENGINE_NAMES:S=$(SUFOBJ)) ;